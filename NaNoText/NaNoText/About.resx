<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        i/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACLi4v/i4uL/4uLi/+Li4v/i4uL/4uL
        i/+Li4u/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACLi4tAi4uL/4uL
        i/+Li4v/i4uL/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIuLi/+Li4v/i4uL/4uL
        i/+Li4v/i4uL74uLiyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIuL
        i0CLi4v/i4uL/4uLi/+Li4v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi4uL/4uL
        i/+Li4v/i4uL/4uLi/+Li4twAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAi4uLQIuLi/+Li4v/i4uL/4uLi/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACLi4v/i4uL/4uLi/+Li4v/i4uLvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACLi4tAi4uL/4uLi/+Li4v/i4uL/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwf/wf8H/4H/B/+B/wf/Af8H/gGHB/wAhwf4AAcH+AAHB/gADwfwAA8H4
        AEPB+ABDwfAAA8HwAAPB4EADwcBwA8HAEEPBgABDwQAAA8EDAAPAB4ADwAfAB8AP8D/AH/B/wB/wf8A/
        8H/Af/B/wH/wf8D/8H/B//B///////////8=
</value>
  </data>
</root>